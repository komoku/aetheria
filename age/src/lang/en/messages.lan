#Default AGE messages for English language

#When you take the item $item
you.get.item=You take $item.\n

#When you take the item $item which is inside containers ($location)
you.get.item.from.location=You take $item $location.\n

#When $1 takes the item $item
someone.gets.item=$1 takes $item.\n

#When $1 takes the item $item which is inside containers ($location)
someone.gets.item.from.location=$1 takes $item $location.\n

#When you drop the item $item
you.drop.item=You drop $item.\n

#When $1 drops the item $item
someone.drops.item=$1 drops $item.\n

#When you wear the item $item on $limbs
you.wear.item=You wear $item on $limbs.\n

#When $1 wears the item $item on $limbs
someone.wears.item=$1 wears $item.\n

#When you unwear the item $item
you.unwear.item=You take off $item.\n

#When $1 unwears the item $item
someone.unwears.item=$1 takes off $item.\n

#When you wield the item $item on $limbs
you.wield.item=You wield $item on $limbs.\n

#When $1 wields the item $item on $limbs
someone.wields.item=$1 wields $item.\n

#When you unwield the item $item
you.unwield.item=You stop wielding $item.\n

#When $1 unwields the item $item
someone.unwields.item=$1 stops wielding $item.\n

#When you cannot get an item because it's not gettable (fixed in place)
denial.get.ungettable=It doesn't make much sense to try to take $item.\n

#When the parser does not understand something.
error.parsing=I don't understand...\n

#When an item cannot be taken due to weight
cant.get.item.weight=You are carrying too much weight to take $item.\n

#When an item cannot be taken due to volume
cant.get.item.volume=You are carrying too much bulk to take $item.\n

#When an item cannot be dropped due to weight
cant.drop.item.weight=You cannot leave $item here, there is too much weight.\n

#When an item cannot be dropped due to volume
cant.drop.item.volume=You cannot leave $item here, there is not enough room.\n

#When you try to open an unopenable thing ($item)
item.not.openable=$item is not something you can open.

#When you try to close an uncloseable thing ($item)
item.not.closeable=$item is not something you can close.

#When you try to unlock something that is not unlockable ($item)
item.not.unlockable=That doesn't seem to be unlockable.

#When you try to lock something that is not lockable ($item)
item.not.lockable=That doesn't seem to be lockable.

#When you try to wield something that is not a weapon
wield.non.weapon=$item does not seem to be a weapon.\n

#When you try to wield something you're already wielding
wield.already.wielded=You're already wielding $item.\n

#When you try to wear something you're already wearing
wear.already.worn=You're already wearing $item.\n

#When you try to wear something ($item) on a limb where you are wearing something else
wear.already.worn=You need to take something off to be able to wear $item.\n

#When you try to wield a weapon that requires a kind of limb that you don't have
wield.no.suitable.limbs=That doesn't seem designed for your species.\n

#When you try to wear a piece of armour that requires a kind of limb that you don't have
wear.no.suitable.limbs=That doesn't seem designed for your species.\n

#When you place $item in $container
you.put.into=You place $item in $container.\n

#When you cannot put $item into $container due to excess weight
cant.put.into.weight=$container cannot handle that much weight.\n

#When you cannot put $item into $container due to excess bulk
cant.put.into.volume=$item won't fit inside $container.\n

#When you try to put something inside $container which is not really a container.
cant.put.into.noncontainer=Putting things in $container doesn't seem very useful.\n

#When you try to put something inside a closed $container.
cant.put.into.closed=$container is closed.\n

#When you try to look at something that doesn't exist
look.what=What are you trying to look at?\n

#When you try to open something that doesn't exist
open.what=What are you trying to open?\n

#When you try to close something that isn't there
close.what=What are you trying to close?\n

#When you try to take something that isn't in the room
get.what=What are you trying to take?\n

#When you try to drop something that doesn't exist or you don't have
drop.what=What are you trying to drop?\n

#When you try to unwear something that doesn't exist or you are not wearing
unwear.what=What are you trying to take off?\n

#When you try to wear something that doesn't exist or you don't have
wear.what=What are you trying to wear?\n

#When you try to wield something that doesn't exist or you don't have
wield.what=What weapon are you trying to wield?\n

#When you try to unwield something that doesn't exist or you are not wielding
unwield.what=What weapon are you trying to stop wielding?\n

#When you try to go to an unrecognised place
go.where=What? Where do you want to go?\n

#When you try to go through a path marked as invalid (currently unused)
go.where=What? Go where?\n

When the verb go appears without arguments
go.nowhere=Go where?\n

#When you try to go towards a standard direction (north, south, etc.) but there is no exit
go.noexit=There doesn't seem to be an exit in that direction.\n

#When you try to attack someone who isn't there
attack.what=What? Attack whom?\n

#When you try to block someone who isn't there
block.what=What? Block whom?\n

#When you try to dodge and they aren't attacking you
dodge.what=You're not being attacked. Dodge what?\n

#When you try to put something into something and the objects are not recognised
put.what.where=What? Put what where?\n

#List of items in a room
items.here=You see $inventory here.

#A character in a room
mobile.here=$list is here.

#Several characters in a room
mobiles.here=$list are here.

#Show nonempty inventory
you.have.items=You have $inventory.\n

#Show empty inventory
you.have.nothing=You have nothing.\n

#Show garment that you are wearing
you.are.wearing.item=You are wearing $item on $limbs.\n

#Show weapon that you are wielding
you.are.wielding.item=You are wielding $item on $limbs.\n

#Try to cast a spell that doesn't exist or that you don't know
cast.no.spell=You don't know such spell.\n

#When you die
you.die=You die.\n

#When someone dies
someone.dies=$1 dies.\n

#Trying to open something on the ground with a multi-target command (open the boxes, etc.)
you.try.open.from.floor=You try to open $item:

#Trying to open something from your inventory with a multi-target command (open the boxes, etc.)
you.try.open.from.inventory=You try to open $item that you are carrying:

#Trying to close something on the ground with a multi-target command (close the boxes, etc.)
you.try.close.from.floor=You try to close $item:

#Trying to close something from your inventory with a multi-target command (close the boxes, etc.)
you.try.close.from.inventory=You try to close $item that you are carrying:

#When a verb ($command) is entered which is defined in the verb lists, but has no defined behaviour
undefined.action=What? $command?\n

#When the property noPronounDisabiguation of a player is set to true and a pronoum "him/her/it" is used, where the previous action was referring to two entities. $command can be used to refer to the verb.
ambiguous.pronoun=I can't resolve a pronominal action when the previous action referred to two objects.\n

#When you try to go back but you see no path leading to the previous room
cant.go.back=You don't see a way of returning...\n

#Combat: weapon hit, numerical damage ($1 attacks $2 with $weapon, hits, inflicts $damage damage)
someone.hits.someone.numeric=$1 strikes $2 with $weapon inflicting $damage damage...\n
enemy.hits.you.numeric=$1 strikes you with $weapon inflicting $damage damage...\n
you.hit.enemy.numeric=You strike $2 with $weapon inflicting $damage damage...\n

#Combat: weapon hit, subjective damage
someone.hits.someone=$1 strikes $2 with $weapon inflicting $damage...\n
enemy.hits.you=$1 strikes you with $weapon inflicting $damage...\n
you.hit.enemy=You strike $2 with $weapon inflicting $damage...\n

#Combat: weapon hit, but without damage
someone.hits.someone.nodamage=$1 strikes $2 with $weapon but does no damage...\n
enemy.hits.you.nodamage=$1 strikes you with $weapon but does not damage you...\n
you.hit.enemy.nodamage=You strike $2 with $weapon but do no damage...\n

#Combat: weapon miss
someone.misses.someone=$1's attack misses $2.\n
enemy.misses.you=$1's attack misses you.\n
you.miss.enemy=Your attack misses $2.\n

#Damage reports
damage.5=very light damage
damage.10=light damage
damage.18=some damage
damage.25=significant damage
damage.33=moderate damage
damage.40=quite a lot of damage
damage.50=severe damage
damage.60=lots of damage
damage.70=a great damage
damage.80=an enormous damage
damage.90=terrible wounds
damage.lethal=lethal damage

#Wound reports
woundstatus.1=is intact
woundstatus.5=has some bruises
woundstatus.10=has light wounds
woundstatus.18=has quite light wounds
woundstatus.25=has significant wounds
woundstatus.33=has important wounds
woundstatus.40=has serious wounds
woundstatus.50=has worrying wounds
woundstatus.60=is heavily wounded
woundstatus.70=is very heavily wounded
woundstatus.80=is critically wounded
woundstatus.90=is in a really pitiful state
woundstatus.100=is a step away from death
woundstatus.lethal=is lethally wounded

#Not enough mana to cast $spell
not.enough.mana=You don't have enough mana to cast that spell.\n

#Interruptions: you are interrupted while mooving, attacking or casting by $cause.
interrupted.move=$cause interrupts your attempt to leave.\n
interrupted.attack=$cause interrupts your attempt to attack.\n
interrupted.cast=$cause interrupts your attempt to use magic.\n

#$1 attacks someone who isn't there any longer
someone.attacks.absent=$1 interrupts the attack given the absence of the enemy.\n
someone.attacks.you.absent=$1 hesitates in your absence.\n
you.attack.absent=You were going to attack, but you hesitate seeing the absence of your enemy.\n

#Combat: clash of weapons in the air
someone.clashes.someone=$1 and $2's weapons clash in the air...\n
enemy.clashes.you=Your weapon and $1's clash in the air...\n
you.clash.enemy="Your weapon and $2's clash in the air...\n

#Combat: $2 fails to block $1's attack in time
you.fail.block.time.someone=You fail to block $1's attack in time...\n
someone.fails.block.time.you=$2 fais to block your attack in time...\n

#Combat: $2 fails to dodge $1's attack in time
you.fail.dodge.time.someone=You fail to dodge $1's attack in time...\n
someone.fails.dodge.time.you=$2 fails to dodge your attack in time...\n

#Combat: $1 was attacking $2, who was trying to get in position to block the attack. But $1 misses so now $2 has the initiative.
someone.fails.blocking.you=You take the initiative...\n
you.fail.blocking.someone=Seeing your attack miss, $2 interrupts the attempt to block...\n

#Combat: $1 was attacking $2, who was trying to get in position to dodge the attack. But $1 misses so now $2 has the initiative.
someone.fails.dodging.you=You take the initiative...\n
you.fail.dodging.someone=Seeing your attack miss, $2 interrupts the attempt to dodge...\n

#Combat: block with weapon, numeric damage ($1 attacks $2 with $weapon, $2 blocks, but despite that $1 inflicts $damage damage)
someone.hits.blocked.someone.numeric=$2 blocks $1 with $weapon receiving $damage points of damage...\n
enemy.hits.blocked.you.numeric=You block $1 with $weapon receiving $damage points of damage...\n
you.hit.blocked.enemy.numeric=$2 blocks with $weapon receiving $damage points of damage...\n

#Combat: block with weapon, subjective damage
someone.hits.blocked.someone=$2 blocks $1's attack with $weapon receiving $damage...\n
enemy.hits.blocked.you=You block $1's attack with $weapon receiving $damage...\n
you.hit.blocked.enemy=$2 blocks your attack with $weapon receiving $damage...\n

#Combat: block with weapon, no damage
someone.hits.blocked.someone.nodamage=$2 blocks $1 with $weapon, fending off the attack...\n
enemy.hits.blocked.you.nodamage=You block $1 with $weapon, fending off the attack...\n
you.hit.blocked.enemy.nodamage=$2 blocks with $weapon, fending off your attack...\n

#Combat: hit with weapon in front of failed block, numeric damage ($1 attacks $2 with $weapon, $2 tries to block, fails, $1 hits, inflicts $damage damage)
someone.hits.block.failed.someone.numeric=$2 fails to block the attack by $1, which hits with $weapon inflicting $damage damage...\n
enemy.hits.block.failed.you.numeric=You fail to block the attack by $1, which hits with $weapon inflicting you $damage damage...\n
you.hit.block.failed.enemy.numeric=$2 fails to block your attack, you hit with $weapon inflicting $damage damage...\n

#Combat: hit with weapon in front of failed block, subjective damage
someone.hits.block.failed.someone=$2 fails to block the attack by $1, which hits with $weapon inflicting $damage...\n
enemy.hits.block.failed.you=You fail to block the attack by $1, which hits with $weapon inflicting you $damage...\n
you.hit.block.failed.enemy=$2 fails to block your attack, you hit with $weapon inflicting $damage...\n

#Combat: hit with weapon in front of failed block, no damage
someone.hits.block.failed.someone.nodamage=$2 fails to block the attack by $1, who hits with $weapon but does no damage...\n
enemy.hits.block.failed.you.nodamage=You fail to block the attack by $1, which hits with $weapon but does no damage...\n
you.hit.block.failed.enemy.nodamage=$2 fails to block your attack, you hit with $weapon but inflict no damage...\n

#Combat: miss with weapon in front of block. As always $1 attacking (missing), $2 blocking. Block success or failure doesn't need to be determined.
someone.misses.blocked.someone=$1's attack missed $2.\n
enemy.misses.blocked.you=$1's attack misses you.\n
you.miss.blocked.enemy=Your attack misses $2.\n

#Combat: $2 successfully dodges $1's attack
someone.dodged.by.someone=$2 aptly dodges $1's attack.\n
enemy.dodged.by.you=You dodge $1's attack.\n
you.dodged.by.enemy=$2 dodges your attack.\n

#Combat: hit with weapon in front of missed dodge, numerical damage ($1 attacks $2 with $weapon, $2 fails to dodge, $1 hits, inflicts $damage damage)
someone.hits.dodge.failed.someone.numeric=$2 tries to dodge $1's strike, but fails, $1 hits with $weapon inflicting $damage damage points...\n
enemy.hits.dodge.failed.you.numeric=Your attempt to dodge fails, and $1 hits you with $weapon inflicting $damage damage points...\n
you.hit.dodge.failed.enemy.numeric=In spite of the attempt to dodge your attack, you strike $2 with $weapon, inflicting $damage points of damage...\n

#Combat: hit with weapon in front of missed dodge, subjective damage
someone.hits.dodge.failed.someone=$2 tries to dodge $1's strike, but fails, $1 hits with $weapon inflicting $damage...\n
enemy.hits.dodge.failed.you=Your attempt to dodge fails, and $1 hits you with $weapon inflicting $damage...\n
you.hit.dodge.failed.enemy=In spite of the attempt to dodge your attack, you strike $2 with $weapon, inflicting $damage...\n

#Combat: hit with weapon in front of missed dodge, but no damage
someone.hits.dodge.failed.someone.nodamage=$2 tries to dodge $1's strike; but fails, $1 hits with $weapon but does no damage.\n\n
enemy.hits.dodge.failed.you.nodamage=Your attempt to dodge fails, and $1 hits you with $weapon but does no damage.\n
you.hit.dodge.failed.enemy.nodamage=In spite of the attempt to avoid your attack, you strike $2 with $weapon; but do no damage.\n

#Combat: miss with weapon in front of dodge. As always $1 attacking (missing), $2 blocking. Dodged success or failure doesn't need to be determined.
someone.misses.dodged.someone=$1's attack missed $2.\n
enemy.misses.dodged.you=$1's attack misses you.\n
you.miss.dodged.enemy=Your attack misses $2.\n

#Combat: $1's armor $armor totally absorbs impact
someones.armor.absorbed=$armor absorbs the impact totally, protecting $1.\n
your.armor.absorbed=$armor protects you, totally absorbing the impact.\n

#Combat: launch attack with weapon 
someone.attacks.someone=$1 attacks $2 with $weapon.\n
enemy.attacks.you=$1 attacks you with $weapon.\n
you.attack.enemy=You attack $2 with $weapon.\n

#Combat: $1 tries to block $2 with $weapon
someone.tries.to.block.someone=$1 tries to block $2 with $weapon.\n
enemy.tries.to.block.you=$1 tries to block with $weapon.\n
you.try.to.block.enemy=You try to block $2 with $weapon.\n

#Combat: try to dodge
someone.tries.to.dodge.someone=$1 tries to dodge $2's attack.\n
enemy.tries.to.dodge.you=$1 tries to dodge your attack.\n
you.try.to.dodge.enemy=You try to dodge $2's attack.\n

#Try to wear a weapon ($item)
cant.wear.weapon=$item is a weapon, you could rather try to wield it.\n

#Try to wield a wearable ($item)
cant.wield.wearable=$item is a garment, you could rather try to wear it.\n

#Try to wear an unwearable item $item
item.not.wearable=$item doesn't look like something you can wear.\n

#Try to wear something when you don't have limbs
cant.wear.without.limbs=You can't wear any clothes if you have no limbs.\n

#Show free limb
you.have.free.limb=You have $limb free.\n

#Show limb occupied by wielded $item
you.use.limb.wielding=You are wielding $item on $limb.\n

#Show limb occupied by worn $item
you.use.limb.wearing=You are wearing $item on $limb.\n

#When an item can't be wielded due to weight
cant.wield.item.weight=You cannot wield $item, it's too heavy.\n

#When an item can't be worn due to weight
cant.wear.item.weight=You cannot wear $item, it's too heavy.\n

#When an item can't be wielded due to volume
cant.wield.item.volume=You cannot wield $item, it's too bulky.\n

#When an item can't be worn due to volume
cant.wear.item.volume=You cannot wear $item, it's too bulky.\n

#When an item can't be worn because limbs are busy
wear.busy.limbs=You need to take off something to be able to wear $item.\n

#When an item can't be wielded because limbs are busy
wield.busy.limbs=You need to unwield some weapon to be able to wield $item.\n

#No weapon suitable for suicide
no.suicide.weapon=You have no weapons suitable for suicide.\n

#$1 suicides with weapon $3
someone.suicides=$1 suicides with $3.\n
you.suicide=You suicide with $3.\n

#Articles: definite masc/fem, indefinite masc/fem
art.def.m=the
art.def.f=the
art.ind.m=a
art.ind.f=a

#Coordinating conjunction
coord.conj=and
